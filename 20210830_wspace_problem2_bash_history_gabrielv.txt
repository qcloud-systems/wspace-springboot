~/whitespace/gs-spring-boot$ cat ~/.bash_history 
ls
pwd
sudo apt-get update
terraform
az
aws
sudo apt install awscli & sudo apt install azure-cli
sudo apt-get update
ls
pwd
sudo apt-get update
sudo apt-get upgrade
sudo apt-get update
clear
wsl2
cd ~/
ls
pwd
lcd
ls
wsl --list
wsl list
wsl --set-version Ubuntu-20.04 2
ls
pwd
version
hostnamectl
top 
ping localhost
aws 
aws configure
sudo apt-get update
ls
pwd
mkdir github
ls -las
mkdir whitespace
cd whitespace/
clear
ls
git status
git clone https://github.com/spring-guides/gs-spring-boot
aws configure
terraform version
ls -las
cd gs-spring-boot/
ls -las
clear
ls
cd complete/
clear
ls
ls -las
cd .. 
cd ..
aws
sudo apt install awscli
aws version
aws --version
aws configure
aws s3 ls
ls
cd whitespace/
clear
ls
cd gs-spring-boot/ls
cd gs-spring-boot
clear
ls
ls -las
cd complete
ls
clear
ls -las
curl localhost:8080
git status
git -version
git --version
ls
git config --global user.name "qcloud-systems"
git config --global user.email "gabe@qcloud.systems"
git config --global --list
git remote set-url origin git@github.com:qcloud-systems/whitespace.git
git status
git init
git status
git remote -v
git remote set-url origin git@github.com:qcloud-systems/whitespace.git
git remote add origin git@github.com:qcloud-systems/whitespace.git
git remote -v
git status
git add . 
git commit . 
git status
git checkout -b PR-Update-Repo-initial
git add . 
git commit .
git push origin PR-Update-Repo-initial 
ssh-keygen -t ed25519 -C "gabe@qcloud.systems"
cat ~/.ssh/id_ed25519.pub
git status
git push origin PR-Update-Repo-initial 
git merge
git merge origin PR-Update-Repo-initial 
git push origin main 
git rebase
git rebase origin main
git rebase main
git rebase PR-Update-Repo-initial 
git push origin main
git pull origin main
git push origin main
git add . 
git commit . 
git push origin main
git checkout origin main
git checkout main
git status
git add . 
git commit . 
git push origin main
git submodule add https://github.com/spring-guides/gs-spring-boot
git submodule add gs-spring-boot/
git submodule add ./gs-spring-boot/
git add . 
git commit . 
git submodule add ./|gs-spring-boot/
git submodule add -f ./|gs-spring-boot/
curl localhost:8080
clear
curl localhost:8080
cd gs-spring-boot/
docker -version
cd gs-spring-boot/
ls
ls -las
maven --version
mvn --version
java --version
java -jar
java -version
sudo apt-get install maven
ls -las
JAVA_HOME
echo $JAVA_HOME
sudo apt update
java -version
echo path JAVA_HOME
echo path $JAVA_HOME
echo $path $JAVA_HOME
echo %JAVA_HOME%
ls bin
ls /bin
ls /bin/java/
ls /bin/java
ls -las /bin/java
java --version
echo $JAVA_HOME
clear
which java
dirname $(dirname $(readlink -f $(which javac)))
java -XshowSettings:properties -version
java -XshowSettings:properties -version 2>&1 > /dev/null | grep 'java.home' 
~/.bashrc
sudo ~/.bashrc
sudo nano ~/.bashrc
source ~/.bashrc
echo $JAVA_HOME
javac -version
java -version
sudo apt install default-jdk
sdk -version
curl -s "https://get.sdkman.io" | bash
unzip -version
sudo apt install unzip
javac -version
curl -s "https://get.sdkman.io" | bash
zip -version
sudo apt install zip
curl -s "https://get.sdkman.io" | bash
sdk install springboot
sdk help
source "/home/mechanic/.sdkman/bin/sdkman-init.sh"
sdk help
sdk install springboot
spring --version
sdk ls springboot
spring run ~/whitespace/app.groovy 
ls
ls -las
clear
ls
cd complete/
ls -las
./mvnw spring-boot:run
wsl --set-default-version 2
wsl --version
wsl
docker -version
code
code .
wsl -list